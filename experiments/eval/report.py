# experiments/eval/report.py
from __future__ import annotations

import csv
from pathlib import Path
from typing import Dict, List, Tuple, Optional

try:
    import matplotlib.pyplot as plt  # type: ignore
except Exception:
    plt = None  # type: ignore


def _read_csv(path: Path) -> List[Dict]:
    with open(path, newline="", encoding="utf-8") as f:
        return list(csv.DictReader(f))


# --- Bandit ---

def evaluate_bandit_family(family_dir: Path) -> None:
    """
    Given outputs/verify/bandit/<problem>/summary.csv, emit a small
    aggregate plot (already generated by verify_cli). This is a no-op placeholder
    for compatibility with earlier calls.
    """
    # Nothing extra needed because verify_cli already writes per-problem plots.
    return


# --- Maze ---

def evaluate_maze_family(family_dir: Path) -> None:
    """
    Same note as bandit. The per-env bar/GT plot is written by verify_cli.
    """
    return


# --- Renewal ---

def evaluate_renewal_family(family_dir: Path) -> None:
    """
    Same note as others â€” verify_cli writes the per-instance plot.
    """
    return
